<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="EnvDTE80" #>
<#@ import namespace="EnvDTE80" #>
<#@ import namespace="System.Linq" #><#@ include file="../../T4Plugin/VisualStudioAutomationHelper.ttinclude" #>
<#@ include file="../../T4Plugin/MultiOutput.ttinclude" #><#
    // get a reference to the project of this t4 template
    var DbProject = VisualStudioHelper.GetProject("MyProject.DB");

    EnvDTE.Project modelProject = VisualStudioHelper.GetProject("MyProject.Model");
	
    var domainModelNameSpace = "MyProject.Model.DataModel";

    var repositoryInterface = "MyProject.Interface.Repository";

    var allModelClasses = VisualStudioHelper.
        GetAllCodeElementsOfType(modelProject.CodeModel.CodeElements, EnvDTE.vsCMElement.vsCMElementClass, true);

	var filteredClass = allModelClasses
        .OfType<CodeClass2>().Where(clas => clas.FullName.StartsWith(domainModelNameSpace))
		.OrderBy(clas => clas.FullName).ToList();
	
	allModelClasses = null;
    
	// iterate all classes
    foreach(CodeClass2 modelClass in filteredClass)
    {
        var fileName="I"+modelClass.Name+"Repository.Generated.cs";
		var rootNameSpace = modelClass.Namespace.FullName;
        var nameSpace = modelClass.Namespace.FullName.Replace(domainModelNameSpace, repositoryInterface);
#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template and will be re-created if deleted
//	   with default implementation.
// </auto-generated>
//------------------------------------------------------------------------------
namespace <#=            nameSpace #>
{
    using <#=            modelClass.Namespace.FullName #>;
    using System;

    /// <summary>
    /// Interface to interact with <see cref="<#=            modelClass.FullName#>"/> domain model.
    /// </summary>
    public partial interface I<#=            modelClass.Name#>Repository
	    : IRepository<<#=            modelClass.Name#>>
    {
    }
}
<#
    }
#>