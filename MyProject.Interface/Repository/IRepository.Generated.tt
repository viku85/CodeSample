<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="EnvDTE" #>
<#@ Assembly Name="EnvDTE80" #>
<#@ Assembly name="System.ComponentModel.DataAnnotations" #>
<#@ import namespace="EnvDTE" #>
<#@ import namespace="EnvDTE80" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.ComponentModel.DataAnnotations" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ include file="../../T4Plugin/VisualStudioAutomationHelper.ttinclude" #>
<#@ include file="../../T4Plugin/MultiOutput.ttinclude" #>
<#

    // get a reference to the project of this t4 template
    var DbProject = VisualStudioHelper.GetProject("MyProject.DB");

    var modelProject = VisualStudioHelper.GetProject("MyProject.Model");

    var domainModelNameSpace = "MyProject.Model.DataModel";

    var repositoryInterface = "MyProject.Interface.Repository";

    // get all class items from the code model
    var allRepoClasses = VisualStudioHelper.
        GetAllCodeElementsOfType(DbProject.CodeModel.CodeElements, EnvDTE.vsCMElement.vsCMElementClass, false)
        .Where(model=>model.FullName.StartsWith(repositoryInterface));

    var allModelClasses = VisualStudioHelper.
        GetAllCodeElementsOfType(modelProject.CodeModel.CodeElements, EnvDTE.vsCMElement.vsCMElementClass, false)
        ;

    // iterate all classes
    foreach(CodeClass2 modelClass in allModelClasses
        .OfType<CodeClass>().Where(clas=>clas.FullName.StartsWith(domainModelNameSpace) && 
        !clas.FullName.EndsWith("MetadataSource")
        ).OrderBy(clas=>clas.FullName))
    {
        var fileName="I"+modelClass.Name+"Repository.Generated.cs";
        var nameSpace = modelClass.Namespace.Name.Replace(domainModelNameSpace, repositoryInterface);
        #>
<#=            modelClass.Comment #>
namespace <#=            nameSpace #>
{
    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated from a template and will be re-created if deleted
    //	   with default values if executed.
    // </auto-generated>
    //------------------------------------------------------------------------------
    using <#=            modelClass.Namespace.Name #>;
    using System;

    /// <summary>
    /// Interface to interact with <see cref="<#=            modelClass.FullName#>"/> domain model.
    /// </summary>
    public partial interface I<#=            modelClass.Name#>Repository
	    : IRepository<<#=            modelClass.Name#>>
    {


    }
}
<#
        SaveOutput(fileName);
        DeleteOldOutputs();
    }
#>
