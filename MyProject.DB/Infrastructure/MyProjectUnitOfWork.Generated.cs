










 




//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template and will be re-created if deleted
//	   with default implementation.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using MyProject.Interface.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.DependencyInjection;
namespace MyProject.DB.Infrastructure
{

    /// <summary>
    /// MyProject implementation of Unit of Work
    /// </summary>
	public sealed partial class MyProjectUnitOfWork
		: IMyProjectUnitOfWork
	{
        /// <summary>
        /// The service provider
        /// </summary>
        private readonly IServiceProvider ServiceProvider;

        /// <summary>
        /// Initializes a new instance of the <see cref="MyProjectUnitOfWork"/> class.
        /// </summary>
        /// <param name="dbContext">The database context.</param>
        /// <param name="serviceProvider">The service provider.</param>
        public MyProjectUnitOfWork(MyProjectContext dbContext, IServiceProvider serviceProvider)
            : base(dbContext)
        {
            ServiceProvider = serviceProvider;
        }
					
		/// <summary>
		/// BookRepository holder
		/// </summary>
        private MyProject.DB.Repository.BookRepository _bookRepository;

        /// <summary>
        /// Gets the BookRepository repository.
        /// </summary>
        /// <value>
        /// The BookRepository repository.
        /// </value>
        MyProject.Interface.Repository.IBookRepository IMyProjectUnitOfWork.BookRepository 
        { 
	        get
	        {
				return ServiceProvider.GetService<MyProject.DB.Repository.BookRepository>();
	        }
        }
	}
}